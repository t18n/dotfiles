# ####################################################################################
# # rtx configuration file
# # Documentation: https://github.com/jdxcode/rtx#global-config-configrtxconfigtoml
# ####################################################################################

[settings]
# whether to prompt to install plugins and runtimes if they're not already installed
missing_runtime_behavior = 'prompt' # other options: 'ignore', 'warn', 'prompt', 'autoinstall'
legacy_version_file = true

# configure `rtx install` to always keep the downloaded archive
always_keep_download = false        # deleted after install by default

# configure how frequently (in minutes) to fetch updated plugin repository changes
# this is updated whenever a new runtime is installed
# (note: this isn't currently implemented but there are plans to add it: https://github.com/jdxcode/rtx/issues/128)
plugin_autoupdate_last_check_duration = 10080 # (one week) set to 0 to disable updates

verbose = false     # set to true to see full installation output, see `RTX_VERBOSE`
asdf_compat = false # set to true to ensure .tool-versions will be compatible with asdf, see `RTX_ASDF_COMPAT`
jobs = 4            # number of plugins or runtimes to install in parallel. The default is `4`.
raw = false         # set to true to directly pipe plugins to stdin/stdout/stderr

shorthands_file = '~/.config/rtx/shorthands.toml' # path to the shorthands file, see `RTX_SHORTHANDS_FILE`
disable_default_shorthands = false # disable the default shorthands, see `RTX_DISABLE_DEFAULT_SHORTHANDS`

experimental = false # enable experimental features such as shims

[alias.nodejs]
node18 = '18'  # makes `rtx install nodejs@my_custom_node` install node-18.x
                       # this can also be specified in a plugin (see below in "Aliases")

# [env]
# NODE_ENV = 'production' # supports arbitrary env vars so rtx can be used like dotenv

[tools]
# terraform = '1.0.0'
# erlang = ['23.3', '24.0']
# nodejs = ['14', '16', '18']
# nodejs = { version = '18', default_packages = ['pnpm', 'yarn', 'npm'] }
# python = { version = '3.10', venv = '.venv', default_packages = ['ansible', 'pipenv'] }
# ruby = { version = '3.1.2', default_packages = ['bundler'] }
# rust = ['1.64.0']
# java = 'adoptopenjdk-19.0.0+36'
